{"version":3,"sources":["assets/utils/images/originals/city.jpg","assets/utils/images/originals/citydark.jpg","assets/utils/images/originals/citynights.jpg","Modules/Auth/Login/index.js","Modules/Auth/index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","recoveryEmail","passwordResetCode","newPassword","confirmNewPassword","error","activeScreen","isLoading","handleChange","bind","assertThisInitialized","handleLogin","handleSendRecoveryEmail","handleResetPassword","activateScreen","screen","setState","e","defineProperty","target","name","value","event","errors","values","_this2","length","data","makeRequest","request","Auth","login","message","MESSAGES","LOGGING","then","responseData","history","push","errorData","resetFields","_this3","forgotPassword","_this4","token","resetPassword","_this5","_this$state","react_default","a","createElement","react","className","Row","Col","lg","lib_default","dots","infinite","speed","arrows","slidesToShow","slidesToScroll","fade","initialSlide","autoplay","adaptiveHeight","style","backgroundImage","bg1","bg3","bg2","md","sm","availity_reactstrap_validation_lib","onSubmit","form","FormGroup","label","type","placeholder","onChange","validate","errorMessage","required","minLength","href","onClick","Button","color","size","react_loaders","transform","match","Component","withRouter","connect","auth","authReducer","appStatus","appStatusReducer","_ref","react_router","path","concat","url","component"],"mappings":"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","file":"static/js/17.cb897897.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/city.cae0cf75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/citydark.ef83596b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/citynights.94cc27a5.jpg\";","import React, {Fragment, Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Slider from \"react-slick\";\r\nimport bg1 from '../../../assets/utils/images/originals/city.jpg';\r\nimport bg2 from '../../../assets/utils/images/originals/citydark.jpg';\r\nimport bg3 from '../../../assets/utils/images/originals/citynights.jpg';\r\n\r\nimport {Col, Row, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio} from 'availity-reactstrap-validation';\r\nimport request from \"../../../services/request\";\r\nimport {MESSAGES} from \"../../../constants/messages\";\r\nimport {makeRequest} from \"../../../actions/requestAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Loader} from 'react-loaders';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            recoveryEmail: \"\",\r\n            passwordResetCode: \"\",\r\n            newPassword: \"\",\r\n            confirmNewPassword: \"\",\r\n            error: \"\",\r\n            activeScreen: \"login\", // login | sendRecoveryEmail | resetPassword\r\n            isLoading: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleSendRecoveryEmail = this.handleSendRecoveryEmail.bind(this);\r\n        this.handleResetPassword = this.handleResetPassword.bind(this);\r\n        this.activateScreen = this.activateScreen.bind(this);\r\n    }\r\n\r\n    activateScreen(screen) {\r\n        this.setState({error:\"\", activeScreen: screen});\r\n    };\r\n\r\n    resetFields() {\r\n        this.setState({\r\n            email: \"\",\r\n            password: \"\",\r\n            recoveryEmail: \"\",\r\n            passwordResetCode: \"\",\r\n            newPassword: \"\",\r\n            confirmNewPassword: \"\",\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(event, errors, values) {\r\n        if (errors.length > 0) {\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n\r\n        this.setState({isLoading: true});\r\n        this.props.makeRequest(request.Auth.login, data, {message: MESSAGES.LOGGING}).then(\r\n            (responseData) => {\r\n                this.props.history.push(\"/\");\r\n            },\r\n            (errorData) => {\r\n                this.setState({error: errorData.message});\r\n                this.resetFields();\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSendRecoveryEmail(event, errors, values) {\r\n        if (errors.length > 0) {\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            email: this.state.recoveryEmail,\r\n        };\r\n\r\n        this.setState({isLoading: true});\r\n        this.props.makeRequest(request.Auth.forgotPassword, data, {message: MESSAGES.LOGGING}).then(\r\n            (responseData) => {\r\n                this.resetFields();\r\n                this.setState({activeScreen: \"resetPassword\", isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({error: errorData.message});\r\n                this.resetFields();\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n    }\r\n\r\n    handleResetPassword(event, errors, values) {\r\n        if (errors.length > 0) {\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            email: this.state.recoveryEmail,\r\n            token: this.state.passwordResetCode,\r\n            password: this.state.newPassword,\r\n        };\r\n\r\n        this.setState({isLoading: true});\r\n        this.props.makeRequest(request.Auth.resetPassword, data, {message: MESSAGES.LOGGING}).then(\r\n            (responseData) => {\r\n                this.resetFields();\r\n                this.setState({activeScreen: \"login\", isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({error: errorData.message});\r\n                this.resetFields();\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            arrows: true,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            fade: true,\r\n            initialSlide: 0,\r\n            autoplay: true,\r\n            adaptiveHeight: true\r\n\r\n        };\r\n\r\n        const {error, email, password, recoveryEmail, passwordResetCode, newPassword, confirmNewPassword, isLoading, activeScreen} = this.state;\r\n        return (\r\n\r\n            <Fragment>\r\n                <div className=\"h-100\">\r\n                    <Row className=\"h-100 no-gutters\">\r\n                        <Col lg=\"4\" className=\"d-none d-lg-block\">\r\n                            <div className=\"slider-light\">\r\n                                <Slider  {...settings}>\r\n                                    <div\r\n                                        className=\"h-100 d-flex justify-content-center align-items-center bg-plum-plate\">\r\n                                        <div className=\"slide-img-bg\"\r\n                                             style={{\r\n                                                 backgroundImage: 'url(' + bg1 + ')'\r\n                                             }}/>\r\n                                        <div className=\"slider-content\">\r\n                                            <h3>Perfect Balance</h3>\r\n                                            <p>\r\n                                                Lottery App is like a dream. Some think it's too good to be true! Extensive collection of unified React Boostrap Components and Elements.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"h-100 d-flex justify-content-center align-items-center bg-premium-dark\">\r\n                                        <div className=\"slide-img-bg\"\r\n                                             style={{\r\n                                                 backgroundImage: 'url(' + bg3 + ')'\r\n                                             }}/>\r\n                                        <div className=\"slider-content\">\r\n                                            <h3>Scalable, Modular, Consistent</h3>\r\n                                            <p>\r\n                                                Easily exclude the components you don't require. Lightweight, consistent\r\n                                                Bootstrap based styles across all elements and components\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"h-100 d-flex justify-content-center align-items-center bg-sunny-morning\">\r\n                                        <div className=\"slide-img-bg opacity-6\"\r\n                                             style={{\r\n                                                 backgroundImage: 'url(' + bg2 + ')'\r\n                                             }}/>\r\n                                        <div className=\"slider-content\">\r\n                                            <h3>Complex, but lightweight</h3>\r\n                                            <p>\r\n                                                We've included a lot of components that cover almost all use cases for\r\n                                                any type of application.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </Slider>\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"8\" md=\"12\" className=\"h-100 d-flex bg-white justify-content-center align-items-center\">\r\n                            <Col lg=\"9\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                                <div className=\"app-logo\"/>\r\n                                {/*============== Login Screen ==================*/}\r\n                                {\r\n                                    activeScreen === \"login\" &&\r\n                                    <div>\r\n                                        { error && <p className=\"text-danger\">{error}</p>}\r\n                                        <h4 className=\"mb-0\">\r\n                                            <span>Please sign in to your account.</span>\r\n                                        </h4>\r\n                                        <Row className=\"divider\"/>\r\n                                        <div>\r\n                                            <AvForm onSubmit={this.handleLogin}>\r\n                                                <Row form>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <AvGroup>\r\n                                                                <AvField name=\"email\"\r\n                                                                         label=\"Email\"\r\n                                                                         type=\"email\"\r\n                                                                         placeholder=\"Email here...\"\r\n                                                                         onChange={this.handleChange}\r\n                                                                         value={email}\r\n                                                                         validate={{\r\n                                                                             email: {\r\n                                                                                 value: true,\r\n                                                                                 errorMessage: 'Please enter a valid email address'\r\n                                                                             },\r\n                                                                             required: {\r\n                                                                                 value: true,\r\n                                                                                 errorMessage: 'Please enter an email address'\r\n                                                                             }\r\n                                                                         }}\r\n                                                                />\r\n                                                                <AvFeedback/>\r\n                                                            </AvGroup>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <AvGroup>\r\n                                                                <AvField name=\"password\"\r\n                                                                         label=\"Password\"\r\n                                                                         type=\"password\"\r\n                                                                         placeholder=\"Enter your password...\"\r\n                                                                         onChange={this.handleChange}\r\n                                                                         value={password}\r\n                                                                         validate={{\r\n                                                                             required: {value: true, errorMessage: 'Please enter your password'},\r\n                                                                             minLength: {value: 6, errorMessage: 'Your name must be at least 6 characters'},\r\n                                                                         }}\r\n                                                                />\r\n                                                            </AvGroup>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/*<FormGroup check>*/}\r\n                                                {/*<Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\"/>*/}\r\n                                                {/*<Label for=\"exampleCheck\" check>Keep me logged in</Label>*/}\r\n                                                {/*</FormGroup>*/}\r\n                                                <Row className=\"divider\"/>\r\n                                                <div className=\"d-flex align-items-center\">\r\n                                                    <div className=\"ml-auto\">\r\n                                                        <a href=\"javascript:void(0);\" onClick={() => this.activateScreen(\"sendRecoveryEmail\")} className=\"btn-lg btn btn-link\">Recover\r\n                                                            Password</a>{' '}{' '}\r\n                                                        <Button color=\"primary\" size=\"lg\">\r\n                                                            { isLoading ?\r\n                                                                <Loader type=\"ball-beat\" style={{transform: 'scale(0.3)'}} color=\"white\"/>\r\n                                                                :\r\n                                                                \"Login to Dashboard\"\r\n                                                            }\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </AvForm>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                                {/*============== Send Password Recovery Email Screen ==================*/}\r\n                                {\r\n                                    activeScreen === \"sendRecoveryEmail\" &&\r\n                                    <div>\r\n                                        { error && <p className=\"text-danger\">{error}</p>}\r\n                                        <h4 className=\"mb-0\">\r\n                                            <span>Please enter your email address to recover your password</span>\r\n                                        </h4>\r\n                                        <Row className=\"divider\"/>\r\n                                        <div>\r\n                                            <AvForm onSubmit={this.handleSendRecoveryEmail}>\r\n                                                <Row form>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <AvGroup>\r\n                                                                <AvField name=\"recoveryEmail\"\r\n                                                                         label=\"Recovery Email\"\r\n                                                                         type=\"email\"\r\n                                                                         placeholder=\"Recovery Email here...\"\r\n                                                                         onChange={this.handleChange}\r\n                                                                         value={recoveryEmail}\r\n                                                                         validate={{\r\n                                                                             email: {\r\n                                                                                 value: true,\r\n                                                                                 errorMessage: 'Please enter a valid email address'\r\n                                                                             },\r\n                                                                             required: {\r\n                                                                                 value: true,\r\n                                                                                 errorMessage: 'Please enter an email address'\r\n                                                                             }\r\n                                                                         }}\r\n                                                                />\r\n                                                                <AvFeedback/>\r\n                                                            </AvGroup>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className=\"divider\"/>\r\n                                                <div className=\"d-flex align-items-center\">\r\n                                                    <div className=\"ml-auto\">\r\n                                                        <a href=\"javascript:void(0);\" onClick={() => this.activateScreen(\"login\")} className=\"btn-lg btn btn-link\">Go Back</a>{' '}{' '}\r\n                                                        <a href=\"javascript:void(0);\" onClick={() => this.activateScreen(\"resetPassword\")} className=\"btn-lg btn btn-link\">Skip to Password Reset Screen</a>{' '}{' '}\r\n                                                        <Button color=\"primary\" size=\"lg\">\r\n                                                            { isLoading ?\r\n                                                                <Loader type=\"ball-beat\" style={{transform: 'scale(0.3)'}} color=\"white\"/>\r\n                                                                :\r\n                                                                \"Send Recovery Email\"\r\n                                                            }\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </AvForm>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                                {/*============== Password Reset Screen ==================*/}\r\n                                {\r\n                                    activeScreen === \"resetPassword\" &&\r\n                                    <div>\r\n                                        { error && <p className=\"text-danger\">{error}</p>}\r\n                                        <h4 className=\"mb-0\">\r\n                                            <span>Please enter the password reset code and your new password</span>\r\n                                        </h4>\r\n                                        <Row className=\"divider\"/>\r\n                                        <div>\r\n                                            <AvForm onSubmit={this.handleResetPassword}>\r\n                                                <Row form>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <AvGroup>\r\n                                                                <AvField name=\"passwordResetCode\"\r\n                                                                         label=\"Password Reset Code\"\r\n                                                                         type=\"text\"\r\n                                                                         placeholder=\"Enter your reset code...\"\r\n                                                                         onChange={this.handleChange}\r\n                                                                         value={passwordResetCode}\r\n                                                                         validate={{\r\n                                                                             required: {value: true, errorMessage: 'Please enter your password reset code'},\r\n                                                                             minLength: {value: 8, errorMessage: 'Invalid code'},\r\n                                                                         }}\r\n                                                                />\r\n                                                            </AvGroup>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <AvGroup>\r\n                                                                <AvField name=\"recoveryEmail\"\r\n                                                                         label=\"Recovery Email\"\r\n                                                                         type=\"email\"\r\n                                                                         placeholder=\"Recovery Email here...\"\r\n                                                                         onChange={this.handleChange}\r\n                                                                         value={recoveryEmail}\r\n                                                                         validate={{\r\n                                                                             email: {\r\n                                                                                 value: true,\r\n                                                                                 errorMessage: 'Please enter a valid email address'\r\n                                                                             },\r\n                                                                             required: {\r\n                                                                                 value: true,\r\n                                                                                 errorMessage: 'Please enter an email address'\r\n                                                                             }\r\n                                                                         }}\r\n                                                                />\r\n                                                                <AvFeedback/>\r\n                                                            </AvGroup>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <AvGroup>\r\n                                                                <AvField name=\"newPassword\"\r\n                                                                         label=\"New Password\"\r\n                                                                         type=\"password\"\r\n                                                                         placeholder=\"Enter your password...\"\r\n                                                                         onChange={this.handleChange}\r\n                                                                         value={newPassword}\r\n                                                                         validate={{\r\n                                                                             required: {value: true, errorMessage: 'Please enter your password'},\r\n                                                                             minLength: {value: 6, errorMessage: 'Your name must be at least 6 characters'},\r\n                                                                         }}\r\n                                                                />\r\n                                                            </AvGroup>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        <FormGroup>\r\n                                                            <AvGroup>\r\n                                                                <AvField name=\"confirmPassword\"\r\n                                                                         label=\"Confirm New Password\"\r\n                                                                         type=\"password\"\r\n                                                                         placeholder=\"Confirm your password...\"\r\n                                                                         onChange={this.handleChange}\r\n                                                                         value={confirmNewPassword}\r\n                                                                         validate={{\r\n                                                                             required: {value: true, errorMessage: 'Please enter your password'},\r\n                                                                             match: {value: \"newPassword\", errorMessage: 'Password and Confirm Password must match'},\r\n                                                                         }}\r\n                                                                />\r\n                                                            </AvGroup>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className=\"divider\"/>\r\n                                                <div className=\"d-flex align-items-center\">\r\n                                                    <div className=\"ml-auto\">\r\n                                                        <a href=\"javascript:void(0);\" onClick={() => this.activateScreen(\"sendRecoveryEmail\")} className=\"btn-lg btn btn-link\">Go Back</a>{' '}{' '}\r\n                                                        <Button color=\"primary\" size=\"lg\">\r\n                                                            { isLoading ?\r\n                                                                <Loader type=\"ball-beat\" style={{transform: 'scale(0.3)'}} color=\"white\"/>\r\n                                                                :\r\n                                                                \"Reset Password\"\r\n                                                            }\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </AvForm>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n}\r\n}\r\n\r\n\r\nLogin.propTypes = {\r\n    makeRequest: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.authReducer,\r\n        appStatus: state.appStatusReducer\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n    makeRequest,\r\n})(Login));","import React, {Fragment} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Login from './Login/';\r\n\r\n// USER PAGES\r\n\r\nconst Auth = ({match}) => (\r\n    <Fragment>\r\n        <div className=\"app-container\">\r\n            <Route path={`${match.url}/login`} component={Login}/>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default Auth;"],"sourceRoot":""}